# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "demo_xllm"
version = "0.0.1"
description = "Demo project using XLLM"
readme = "README.md"
authors = ["Boris Zubarev <bobazooba@gmail.com>"]
repository = "https://github.com/KompleteAI/demo-xllm"
homepage = "https://github.com/KompleteAI/demo-xllm"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = ["llm", "nlp", "ai"]

[tool.poetry.dependencies]
python = ">=3.10, <3.13"
xllm = { git = "https://github.com/KompleteAI/xllm.git", branch = "main" }
#torch = "^2.0.1"
#loguru = "^0.6.0"
#peft = "^0.5.0"
#wandb = "^0.15.9"
#python-dotenv = "^1.0.0"
#requests = "^2.31.0"
#optimum = "^1.12.0"
#bitsandbytes = "^0.41.1"
#scipy = "^1.11.2"
#transformers = "^4.33.1"

#[tool.poetry.group.gpu]
#optional = true
#
#[tool.poetry.group.gpu.dependencies]
#torch = {version = "^2.0.1+cu118", source = "pytorch-gpu"}

#[tool.poetry.group.dev.dependencies]
#black = {version = "^22.10.0", allow-prereleases = true}
#mypy = "^0.991"
#mypy-extensions = "^0.4.3"
#pre-commit = "^2.20.0"
#pytest = "^7.2.0"
#coverage = "^6.5.0"
#coverage-badge = "^1.1.0"
#pytest-html = "^3.2.0"
#pytest-cov = "^4.0.0"
#mock = "~4.0.3"
#pytest-mock = "^3.10.0"
#types-requests = "^2.31.0.2"
#ruff = "^0.0.287"

#[[tool.poetry.source]]
#name = "pytorch-gpu"
#url = "https://download.pytorch.org/whl/cu118"
#priority = "explicit"

[tool.black]
# https://github.com/psf/black
target-version = ["py310"]
line-length = 120
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
plugins = [
#    "pydantic.mypy"
]
python_version = "3.10"
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]

[tool.coverage.run]
source = ["tests"]
omit = [
    "xllm/cli/*",
    "tests/*"
]

[tool.coverage.paths]
source = [
    "xllm",
    "tests"
]

[tool.ruff]
#fixable = ["ALL"]
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
select = ["F", "E", "B", "Q", "W", "I001"]
ignore = ["E203", "D", "I"]  # W503
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "constant.py",
]
line-length = 120
target-version = "py310"

[coverage.paths]
source = "xllm"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
